{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/santiago.cardenas/Desktop/Proyectos/Proyecto de grado/BurstCar/front/burstCarFront/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Validators } from '@angular/forms';\nimport { Geolocation } from '@capacitor/geolocation';\nimport { point, booleanPointInPolygon } from '@turf/turf';\nimport { RIONEGRO_POLIGONO } from '../../data/rionegro.poligono';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../login/login.servicio\";\nimport * as i4 from \"src/app/shared/storage.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@ionic/angular\";\nfunction LoginPage_ion_text_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-text\", 14)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nexport let LoginPage = /*#__PURE__*/(() => {\n  class LoginPage {\n    constructor(fb, router, loginServicio, storageService) {\n      this.fb = fb;\n      this.router = router;\n      this.loginServicio = loginServicio;\n      this.storageService = storageService;\n      this.errorMessage = '';\n      this.loginForm = this.fb.group({\n        usuario: ['', Validators.required],\n        contrasena: ['', Validators.required],\n        tipoUsuario: ['', Validators.required]\n      });\n    }\n    validarLocalizacion() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        try {\n          const {\n            lat,\n            lng\n          } = yield _this.obtenerLocalizacionActual();\n          if (!_this.dentroDeRionegro(lat, lng)) {\n            _this.agregarError('Debes estar dentro de Rionegro para iniciar sesión.');\n            return false;\n          }\n          return true;\n        } catch {\n          _this.agregarError('No se pudo obtener tu ubicación. Activa el GPS.');\n          return false;\n        }\n      })();\n    }\n    obtenerLocalizacionActual() {\n      return _asyncToGenerator(function* () {\n        const pos = yield Geolocation.getCurrentPosition();\n        return {\n          lat: pos.coords.latitude,\n          lng: pos.coords.longitude\n        };\n      })();\n    }\n    dentroDeRionegro(lat, lng) {\n      const pt = point([lng, lat]);\n      return booleanPointInPolygon(pt, RIONEGRO_POLIGONO);\n    }\n    //Vañidar token\n    checkToken() {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        const token = yield _this2.storageService.obtener('token');\n        console.log('Token guardado:', token);\n      })();\n    }\n    onSubmit() {\n      var _this3 = this;\n      return _asyncToGenerator(function* () {\n        _this3.LimpiarErrores();\n        if (!_this3.loginForm.valid) {\n          return _this3.agregarError('Por favor completa todos los campos.');\n        }\n        if (!(yield _this3.validarLocalizacion())) {\n          return;\n        }\n        _this3.ejecutarLogin();\n      })();\n    }\n    ejecutarLogin() {\n      const {\n        usuario,\n        contrasena,\n        tipoUsuario\n      } = this.loginForm.value;\n      const cred = {\n        usuario,\n        contrasena\n      };\n      const login$ = tipoUsuario === 'prestador' ? this.loginServicio.loginPrestador(cred) : this.loginServicio.loginSolicitante(cred);\n      login$.subscribe({\n        next: res => this.respuestaLoginExitoso(res),\n        error: () => this.respuestaLoginFallido()\n      });\n    }\n    respuestaLoginExitoso(res) {\n      var _this4 = this;\n      return _asyncToGenerator(function* () {\n        const token = res.valor;\n        yield _this4.storageService.cargar('token', token);\n        const payload = JSON.parse(atob(token.split('.')[1]));\n        if (['prestador', 'solicitante'].includes(payload.rol)) {\n          _this4.router.navigateByUrl('/servicio/todos');\n        } else {\n          _this4.agregarError('Rol desconocido.');\n        }\n      })();\n    }\n    respuestaLoginFallido() {\n      this.agregarError('Credenciales inválidas.');\n    }\n    LimpiarErrores() {\n      this.errorMessage = '';\n    }\n    agregarError(msg) {\n      this.errorMessage = msg;\n    }\n    /*async onSubmit() {\n      if (this.loginForm.valid) {\n        const { usuario, contrasena, tipoUsuario } = this.loginForm.value;\n        const credenciales : Login= { usuario, contrasena };\n         let loginObservable;\n         if (tipoUsuario === 'prestador') {\n        loginObservable = this.loginServicio.loginPrestador(credenciales);\n      } else {\n        loginObservable = this.loginServicio.loginSolicitante(credenciales);\n      }\n      \n      loginObservable.subscribe({\n        next: async (res: any) => {\n          const token = res.valor;\n          await this.storageService.cargar('token', token);\n             const payload = JSON.parse(atob(token.split('.')[1]));\n             if (payload.rol === 'prestador') {\n            this.router.navigateByUrl('/servicio/todos');\n          } else if (payload.rol === 'solicitante') {\n            this.router.navigateByUrl('/servicio/todos');\n          } else {\n            this.errorMessage = 'Rol desconocido.';\n          }\n        },\n        error: () => {\n          this.errorMessage = 'Credenciales inválidas.';\n        }\n      });\n      } else {\n        this.errorMessage = 'Por favor complete todos los campos.';\n      }\n    }*/\n    registrarse() {\n      var _this5 = this;\n      return _asyncToGenerator(function* () {\n        _this5.LimpiarErrores();\n        if (!(yield _this5.validarLocalizacion())) {\n          return;\n        }\n        _this5.router.navigateByUrl('/registro');\n      })();\n    }\n    logout() {\n      var _this6 = this;\n      return _asyncToGenerator(function* () {\n        yield _this6.storageService.eliminar('token');\n        _this6.router.navigateByUrl('/login');\n      })();\n    }\n    static {\n      this.ɵfac = function LoginPage_Factory(t) {\n        return new (t || LoginPage)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.LoginServicio), i0.ɵɵdirectiveInject(i4.StorageService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: LoginPage,\n        selectors: [[\"app-login\"]],\n        decls: 21,\n        vars: 2,\n        consts: [[1, \"login-background\"], [1, \"login-decor\"], [\"src\", \"../../../assets/img/undraw_vintage_q09n.svg\", \"alt\", \"auto decorativo\"], [1, \"login-container\"], [3, \"ngSubmit\", \"formGroup\"], [\"placeholder\", \"Usuario\", \"fill\", \"outline\", \"formControlName\", \"usuario\", 1, \"login-input\"], [\"placeholder\", \"Contrase\\u00F1a\", \"type\", \"password\", \"fill\", \"outline\", \"formControlName\", \"contrasena\", 1, \"login-input\"], [\"interface\", \"action-sheet\", \"placeholder\", \"Tipo de usuario\", \"formControlName\", \"tipoUsuario\", 1, \"login-input\"], [\"value\", \"solicitante\"], [\"value\", \"prestador\"], [\"color\", \"danger\", 4, \"ngIf\"], [\"expand\", \"block\", \"color\", \"dark\", \"type\", \"submit\", 1, \"login-button\"], [\"expand\", \"block\", \"color\", \"danger\", 3, \"click\"], [1, \"redirect-text\", 3, \"click\"], [\"color\", \"danger\"]],\n        template: function LoginPage_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"ion-content\", 0)(1, \"div\", 1);\n            i0.ɵɵelement(2, \"img\", 2);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"div\", 3)(4, \"h2\");\n            i0.ɵɵtext(5, \"Login\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(6, \"form\", 4);\n            i0.ɵɵlistener(\"ngSubmit\", function LoginPage_Template_form_ngSubmit_6_listener() {\n              return ctx.onSubmit();\n            });\n            i0.ɵɵelement(7, \"ion-input\", 5)(8, \"ion-input\", 6);\n            i0.ɵɵelementStart(9, \"ion-select\", 7)(10, \"ion-select-option\", 8);\n            i0.ɵɵtext(11, \"Solicitante de servicio\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(12, \"ion-select-option\", 9);\n            i0.ɵɵtext(13, \"Prestador de servicio\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(14, LoginPage_ion_text_14_Template, 3, 1, \"ion-text\", 10);\n            i0.ɵɵelementStart(15, \"ion-button\", 11);\n            i0.ɵɵtext(16, \" Iniciar \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(17, \"ion-button\", 12);\n            i0.ɵɵlistener(\"click\", function LoginPage_Template_ion_button_click_17_listener() {\n              return ctx.logout();\n            });\n            i0.ɵɵtext(18, \" Cerrar sesi\\u00F3n \");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(19, \"p\", 13);\n            i0.ɵɵlistener(\"click\", function LoginPage_Template_p_click_19_listener() {\n              return ctx.registrarse();\n            });\n            i0.ɵɵtext(20, \" \\u00BFDesea crear una cuenta nueva? \");\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(6);\n            i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n            i0.ɵɵadvance(8);\n            i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n          }\n        },\n        dependencies: [i5.NgIf, i1.ɵNgNoValidate, i1.NgControlStatus, i1.NgControlStatusGroup, i6.IonButton, i6.IonContent, i6.IonInput, i6.IonSelect, i6.IonSelectOption, i6.IonText, i6.SelectValueAccessor, i6.TextValueAccessor, i1.FormGroupDirective, i1.FormControlName],\n        styles: [\".login-background[_ngcontent-%COMP%]{--background: #2f4f39;display:flex;justify-content:center;align-items:center;position:relative;overflow:hidden}.login-decor[_ngcontent-%COMP%]{position:absolute;top:32%;left:50%;transform:translate(-50%);opacity:.08;z-index:0}.login-decor[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:70vw;max-width:500px;height:auto;pointer-events:none;-webkit-user-select:none;user-select:none}.login-container[_ngcontent-%COMP%]{width:80%;margin:auto;padding-top:15vh;text-align:center;color:#232020;z-index:1;position:relative}.login-input[_ngcontent-%COMP%]{margin:15px 0;--background: #f3f3e4;--color: #000;--border-radius: 5px}.login-button[_ngcontent-%COMP%]{--background: #6c8f6d;font-weight:700;margin-top:20px}.redirect-text[_ngcontent-%COMP%]{margin:20px 0;text-decoration:underline;cursor:pointer;color:#f0f0f0}\"]\n      });\n    }\n  }\n  return LoginPage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}