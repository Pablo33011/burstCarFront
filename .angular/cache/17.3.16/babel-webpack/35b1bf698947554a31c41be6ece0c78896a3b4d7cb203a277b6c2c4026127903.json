{"ast":null,"code":"// index.ts\nimport { polygon, featureCollection, isObject } from \"@turf/helpers\";\nimport { collectionOf } from \"@turf/invariant\";\nimport { cloneProperties } from \"@turf/clone\";\nimport * as d3voronoi from \"d3-voronoi\";\nfunction coordsToPolygon(coords) {\n  coords = coords.slice();\n  coords.push(coords[0]);\n  return polygon([coords]);\n}\nfunction voronoi2(points, options) {\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  const bbox = options.bbox || [-180, -85, 180, 85];\n  if (!points) throw new Error(\"points is required\");\n  if (!Array.isArray(bbox)) throw new Error(\"bbox is invalid\");\n  collectionOf(points, \"Point\", \"points\");\n  return featureCollection(d3voronoi.voronoi().x(feature => feature.geometry.coordinates[0]).y(feature => feature.geometry.coordinates[1]).extent([[bbox[0], bbox[1]], [bbox[2], bbox[3]]]).polygons(points.features).map(function (coords, index) {\n    return Object.assign(coordsToPolygon(coords), {\n      properties: cloneProperties(points.features[index].properties)\n    });\n  }));\n}\nvar turf_voronoi_default = voronoi2;\nexport { turf_voronoi_default as default, voronoi2 as voronoi };\n//# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}