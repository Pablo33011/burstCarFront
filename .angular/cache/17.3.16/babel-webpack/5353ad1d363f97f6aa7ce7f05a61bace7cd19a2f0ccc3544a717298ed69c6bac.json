{"ast":null,"code":"// index.ts\nimport { convertLength, earthRadius } from \"@turf/helpers\";\nimport { getCoord } from \"@turf/invariant\";\nfunction rhumbDistance(from, to, options = {}) {\n  const origin = getCoord(from);\n  const destination = getCoord(to);\n  destination[0] += destination[0] - origin[0] > 180 ? -360 : origin[0] - destination[0] > 180 ? 360 : 0;\n  const distanceInMeters = calculateRhumbDistance(origin, destination);\n  const distance = convertLength(distanceInMeters, \"meters\", options.units);\n  return distance;\n}\nfunction calculateRhumbDistance(origin, destination, radius) {\n  radius = radius === void 0 ? earthRadius : Number(radius);\n  const R = radius;\n  const phi1 = origin[1] * Math.PI / 180;\n  const phi2 = destination[1] * Math.PI / 180;\n  const DeltaPhi = phi2 - phi1;\n  let DeltaLambda = Math.abs(destination[0] - origin[0]) * Math.PI / 180;\n  if (DeltaLambda > Math.PI) {\n    DeltaLambda -= 2 * Math.PI;\n  }\n  const DeltaPsi = Math.log(Math.tan(phi2 / 2 + Math.PI / 4) / Math.tan(phi1 / 2 + Math.PI / 4));\n  const q = Math.abs(DeltaPsi) > 1e-11 ? DeltaPhi / DeltaPsi : Math.cos(phi1);\n  const delta = Math.sqrt(DeltaPhi * DeltaPhi + q * q * DeltaLambda * DeltaLambda);\n  const dist = delta * R;\n  return dist;\n}\nvar turf_rhumb_distance_default = rhumbDistance;\nexport { turf_rhumb_distance_default as default, rhumbDistance };\n//# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}