{"ast":null,"code":"// index.ts\nimport { degreesToRadians, radiansToDegrees } from \"@turf/helpers\";\nimport { getCoord } from \"@turf/invariant\";\nfunction rhumbBearing(start, end, options = {}) {\n  let bear360;\n  if (options.final) {\n    bear360 = calculateRhumbBearing(getCoord(end), getCoord(start));\n  } else {\n    bear360 = calculateRhumbBearing(getCoord(start), getCoord(end));\n  }\n  const bear180 = bear360 > 180 ? -(360 - bear360) : bear360;\n  return bear180;\n}\nfunction calculateRhumbBearing(from, to) {\n  const phi1 = degreesToRadians(from[1]);\n  const phi2 = degreesToRadians(to[1]);\n  let deltaLambda = degreesToRadians(to[0] - from[0]);\n  if (deltaLambda > Math.PI) {\n    deltaLambda -= 2 * Math.PI;\n  }\n  if (deltaLambda < -Math.PI) {\n    deltaLambda += 2 * Math.PI;\n  }\n  const deltaPsi = Math.log(Math.tan(phi2 / 2 + Math.PI / 4) / Math.tan(phi1 / 2 + Math.PI / 4));\n  const theta = Math.atan2(deltaLambda, deltaPsi);\n  return (radiansToDegrees(theta) + 360) % 360;\n}\nvar turf_rhumb_bearing_default = rhumbBearing;\nexport { turf_rhumb_bearing_default as default, rhumbBearing };\n//# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}