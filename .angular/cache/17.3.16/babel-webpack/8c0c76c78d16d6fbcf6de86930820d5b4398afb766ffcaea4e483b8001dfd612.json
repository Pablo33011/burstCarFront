{"ast":null,"code":"// index.ts\nimport { degreesToRadians, polygon, isObject, isNumber } from \"@turf/helpers\";\nimport { rhumbDestination } from \"@turf/rhumb-destination\";\nimport { transformRotate } from \"@turf/transform-rotate\";\nimport { getCoord } from \"@turf/invariant\";\nfunction ellipse(center, xSemiAxis, ySemiAxis, options) {\n  options = options || {};\n  const steps = options.steps || 64;\n  const units = options.units || \"kilometers\";\n  const angle = options.angle || 0;\n  const pivot = options.pivot || center;\n  const properties = options.properties || {};\n  if (!center) throw new Error(\"center is required\");\n  if (!xSemiAxis) throw new Error(\"xSemiAxis is required\");\n  if (!ySemiAxis) throw new Error(\"ySemiAxis is required\");\n  if (!isObject(options)) throw new Error(\"options must be an object\");\n  if (!isNumber(steps)) throw new Error(\"steps must be a number\");\n  if (!isNumber(angle)) throw new Error(\"angle must be a number\");\n  const centerCoords = getCoord(center);\n  if (units !== \"degrees\") {\n    const xDest = rhumbDestination(center, xSemiAxis, 90, {\n      units\n    });\n    const yDest = rhumbDestination(center, ySemiAxis, 0, {\n      units\n    });\n    xSemiAxis = getCoord(xDest)[0] - centerCoords[0];\n    ySemiAxis = getCoord(yDest)[1] - centerCoords[1];\n  }\n  const coordinates = [];\n  for (let i = 0; i < steps; i += 1) {\n    const stepAngle = i * -360 / steps;\n    let x = xSemiAxis * ySemiAxis / Math.sqrt(Math.pow(ySemiAxis, 2) + Math.pow(xSemiAxis, 2) * Math.pow(getTanDeg(stepAngle), 2));\n    let y = xSemiAxis * ySemiAxis / Math.sqrt(Math.pow(xSemiAxis, 2) + Math.pow(ySemiAxis, 2) / Math.pow(getTanDeg(stepAngle), 2));\n    if (stepAngle < -90 && stepAngle >= -270) x = -x;\n    if (stepAngle < -180 && stepAngle >= -360) y = -y;\n    if (units === \"degrees\") {\n      const angleRad = degreesToRadians(angle);\n      const newx = x * Math.cos(angleRad) + y * Math.sin(angleRad);\n      const newy = y * Math.cos(angleRad) - x * Math.sin(angleRad);\n      x = newx;\n      y = newy;\n    }\n    coordinates.push([x + centerCoords[0], y + centerCoords[1]]);\n  }\n  coordinates.push(coordinates[0]);\n  if (units === \"degrees\") {\n    return polygon([coordinates], properties);\n  } else {\n    return transformRotate(polygon([coordinates], properties), angle, {\n      pivot\n    });\n  }\n}\nfunction getTanDeg(deg) {\n  const rad = deg * Math.PI / 180;\n  return Math.tan(rad);\n}\nvar turf_ellipse_default = ellipse;\nexport { turf_ellipse_default as default, ellipse };\n//# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}