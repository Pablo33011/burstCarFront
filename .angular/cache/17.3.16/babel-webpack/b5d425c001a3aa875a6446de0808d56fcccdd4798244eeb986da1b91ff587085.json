{"ast":null,"code":"// index.ts\nimport { segmentEach } from \"@turf/meta\";\nimport { getGeom } from \"@turf/invariant\";\nimport { lineOverlap } from \"@turf/line-overlap\";\nimport { lineIntersect } from \"@turf/line-intersect\";\nimport { geojsonEquality } from \"geojson-equality-ts\";\nfunction booleanOverlap(feature1, feature2) {\n  const geom1 = getGeom(feature1);\n  const geom2 = getGeom(feature2);\n  const type1 = geom1.type;\n  const type2 = geom2.type;\n  if (type1 === \"MultiPoint\" && type2 !== \"MultiPoint\" || (type1 === \"LineString\" || type1 === \"MultiLineString\") && type2 !== \"LineString\" && type2 !== \"MultiLineString\" || (type1 === \"Polygon\" || type1 === \"MultiPolygon\") && type2 !== \"Polygon\" && type2 !== \"MultiPolygon\") {\n    throw new Error(\"features must be of the same type\");\n  }\n  if (type1 === \"Point\") throw new Error(\"Point geometry not supported\");\n  if (geojsonEquality(feature1, feature2, {\n    precision: 6\n  })) return false;\n  let overlap = 0;\n  switch (type1) {\n    case \"MultiPoint\":\n      for (var i = 0; i < geom1.coordinates.length; i++) {\n        for (var j = 0; j < geom2.coordinates.length; j++) {\n          var coord1 = geom1.coordinates[i];\n          var coord2 = geom2.coordinates[j];\n          if (coord1[0] === coord2[0] && coord1[1] === coord2[1]) {\n            return true;\n          }\n        }\n      }\n      return false;\n    case \"LineString\":\n    case \"MultiLineString\":\n      segmentEach(feature1, segment1 => {\n        segmentEach(feature2, segment2 => {\n          if (lineOverlap(segment1, segment2).features.length) overlap++;\n        });\n      });\n      break;\n    case \"Polygon\":\n    case \"MultiPolygon\":\n      segmentEach(feature1, segment1 => {\n        segmentEach(feature2, segment2 => {\n          if (lineIntersect(segment1, segment2).features.length) overlap++;\n        });\n      });\n      break;\n  }\n  return overlap > 0;\n}\nvar turf_boolean_overlap_default = booleanOverlap;\nexport { booleanOverlap, turf_boolean_overlap_default as default };\n//# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}