{"ast":null,"code":"import { from } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared/storage.service\";\nexport let JwtInterceptor = /*#__PURE__*/(() => {\n  class JwtInterceptor {\n    constructor(storageService) {\n      this.storageService = storageService;\n    }\n    intercept(req, next) {\n      if (req.headers.has('Authorization')) {\n        return next.handle(req);\n      }\n      return from(this.storageService.obtener('token')).pipe(switchMap(token => {\n        if (token) {\n          const cloned = req.clone({\n            setHeaders: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          return next.handle(cloned);\n        } else {\n          return next.handle(req);\n        }\n      }));\n    }\n    static {\n      this.ɵfac = function JwtInterceptor_Factory(t) {\n        return new (t || JwtInterceptor)(i0.ɵɵinject(i1.StorageService));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: JwtInterceptor,\n        factory: JwtInterceptor.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return JwtInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}