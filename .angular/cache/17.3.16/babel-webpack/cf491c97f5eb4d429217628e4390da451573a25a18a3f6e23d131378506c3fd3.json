{"ast":null,"code":"/*!\r\n * (C) Ionic http://ionicframework.com - MIT License\r\n */\nimport { g as getCapacitor } from './capacitor-59395cbd.js';\nvar ExceptionCode = /*#__PURE__*/function (ExceptionCode) {\n  /**\r\n   * API is not implemented.\r\n   *\r\n   * This usually means the API can't be used because it is not implemented for\r\n   * the current platform.\r\n   */\n  ExceptionCode[\"Unimplemented\"] = \"UNIMPLEMENTED\";\n  /**\r\n   * API is not available.\r\n   *\r\n   * This means the API can't be used right now because:\r\n   *   - it is currently missing a prerequisite, such as network connectivity\r\n   *   - it requires a particular platform or browser version\r\n   */\n  ExceptionCode[\"Unavailable\"] = \"UNAVAILABLE\";\n  return ExceptionCode;\n}(ExceptionCode || {});\nvar KeyboardResize = /*#__PURE__*/function (KeyboardResize) {\n  /**\r\n   * Only the `body` HTML element will be resized.\r\n   * Relative units are not affected, because the viewport does not change.\r\n   *\r\n   * @since 1.0.0\r\n   */\n  KeyboardResize[\"Body\"] = \"body\";\n  /**\r\n   * Only the `ion-app` HTML element will be resized.\r\n   * Use it only for Ionic Framework apps.\r\n   *\r\n   * @since 1.0.0\r\n   */\n  KeyboardResize[\"Ionic\"] = \"ionic\";\n  /**\r\n   * The whole native Web View will be resized when the keyboard shows/hides.\r\n   * This affects the `vh` relative unit.\r\n   *\r\n   * @since 1.0.0\r\n   */\n  KeyboardResize[\"Native\"] = \"native\";\n  /**\r\n   * Neither the app nor the Web View are resized.\r\n   *\r\n   * @since 1.0.0\r\n   */\n  KeyboardResize[\"None\"] = \"none\";\n  return KeyboardResize;\n}(KeyboardResize || {});\nconst Keyboard = {\n  getEngine() {\n    const capacitor = getCapacitor();\n    if (capacitor === null || capacitor === void 0 ? void 0 : capacitor.isPluginAvailable('Keyboard')) {\n      return capacitor.Plugins.Keyboard;\n    }\n    return undefined;\n  },\n  getResizeMode() {\n    const engine = this.getEngine();\n    if (!(engine === null || engine === void 0 ? void 0 : engine.getResizeMode)) {\n      return Promise.resolve(undefined);\n    }\n    return engine.getResizeMode().catch(e => {\n      if (e.code === ExceptionCode.Unimplemented) {\n        // If the native implementation is not available\n        // we treat it the same as if the plugin is not available.\n        return undefined;\n      }\n      throw e;\n    });\n  }\n};\nexport { Keyboard as K, KeyboardResize as a };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}