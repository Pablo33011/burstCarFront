{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/santiago.cardenas/Desktop/Proyectos/Proyecto de grado/BurstCar/front/burstCarFront/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, ViewChild } from '@angular/core';\nimport { Geolocation } from '@capacitor/geolocation';\nimport { MapaSelectorComponent } from 'src/app/shared/mapa-selector/mapa-selector.component';\nlet TrackingPrestadorPage = class TrackingPrestadorPage {\n  constructor(firebaseTracking, fb, route, router) {\n    this.firebaseTracking = firebaseTracking;\n    this.fb = fb;\n    this.route = route;\n    this.router = router;\n    this.servicioId = '';\n    this.trackingActivo = false;\n    this.watchId = null;\n    this.puedeIniciarTracking = false;\n    this.dummyForm = this.fb.group({\n      latitud: [''],\n      longitud: ['']\n    });\n  }\n  ngOnInit() {\n    this.servicioId = this.route.snapshot.paramMap.get('idServicio') || '';\n    this.route.queryParams.subscribe(params => {\n      this.latitudOrigen = parseFloat(params['latitudOrigen']);\n      this.longitudOrigen = parseFloat(params['longitudOrigen']);\n      this.verificarCercaniaAlOrigen();\n    });\n  }\n  verificarCercaniaAlOrigen() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const position = yield Geolocation.getCurrentPosition();\n        const latActual = position.coords.latitude;\n        const lngActual = position.coords.longitude;\n        const distancia = _this.calcularDistanciaEnMetros(latActual, lngActual, _this.latitudOrigen, _this.longitudOrigen);\n        console.log('Distancia al origen:', distancia, 'metros');\n        _this.puedeIniciarTracking = distancia <= 50;\n      } catch (error) {\n        console.error('Error obteniendo ubicaciÃ³n actual:', error);\n      }\n    })();\n  }\n  calcularDistanciaEnMetros(lat1, lon1, lat2, lon2) {\n    const R = 6371000;\n    const rad = x => x * Math.PI / 180;\n    const dLat = rad(lat2 - lat1);\n    const dLon = rad(lon2 - lon1);\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(rad(lat1)) * Math.cos(rad(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return R * c;\n  }\n  iniciarTracking() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this2.puedeIniciarTracking) {\n        alert('Debes estar en el punto de origen para iniciar el tracking.');\n        return;\n      }\n      _this2.trackingActivo = true;\n      _this2.watchId = yield Geolocation.watchPosition({}, (position, err) => {\n        if (position) {\n          const lat = position.coords.latitude;\n          const lng = position.coords.longitude;\n          _this2.firebaseTracking.actualizarUbicacion(_this2.servicioId, lat, lng);\n          _this2.dummyForm.patchValue({\n            latitud: lat,\n            longitud: lng\n          });\n          _this2.mapaSelector.redibujarMapa();\n        }\n      });\n    })();\n  }\n  finalizarTracking() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      _this3.trackingActivo = false;\n      if (_this3.watchId) {\n        Geolocation.clearWatch({\n          id: _this3.watchId\n        });\n        yield _this3.firebaseTracking.eliminarTracking(_this3.servicioId);\n      }\n      _this3.router.navigate(['/servicio/todos']);\n    })();\n  }\n  //Prueba movimiento \n  simularMovimiento() {\n    const latActual = this.dummyForm.value.latitud;\n    const lngActual = this.dummyForm.value.longitud;\n    const nuevoLat = latActual + 0.0005;\n    const nuevoLng = lngActual + 0.0005;\n    this.dummyForm.patchValue({\n      latitud: nuevoLat,\n      longitud: nuevoLng\n    });\n    this.firebaseTracking.actualizarUbicacion(this.servicioId, nuevoLat, nuevoLng);\n    this.mapaSelector.redibujarMapa();\n  }\n};\n__decorate([ViewChild(MapaSelectorComponent)], TrackingPrestadorPage.prototype, \"mapaSelector\", void 0);\nTrackingPrestadorPage = __decorate([Component({\n  selector: 'app-tracking-prestador',\n  templateUrl: './tracking-prestador.page.html',\n  styleUrls: ['./tracking-prestador.page.scss']\n})], TrackingPrestadorPage);\nexport { TrackingPrestadorPage };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}