{"ast":null,"code":"// index.ts\nimport { bbox as turfbbox } from \"@turf/bbox\";\nimport { booleanPointInPolygon } from \"@turf/boolean-point-in-polygon\";\n\n// lib/rbush-export.ts\nimport lib from \"rbush\";\nvar rbush = lib;\n\n// index.ts\nfunction collect(polygons, points, inProperty, outProperty) {\n  var rtree = new rbush(6);\n  var treeItems = points.features.map(function (item) {\n    var _a;\n    return {\n      minX: item.geometry.coordinates[0],\n      minY: item.geometry.coordinates[1],\n      maxX: item.geometry.coordinates[0],\n      maxY: item.geometry.coordinates[1],\n      property: (_a = item.properties) == null ? void 0 : _a[inProperty]\n    };\n  });\n  rtree.load(treeItems);\n  polygons.features.forEach(function (poly) {\n    if (!poly.properties) {\n      poly.properties = {};\n    }\n    var bbox = turfbbox(poly);\n    var potentialPoints = rtree.search({\n      minX: bbox[0],\n      minY: bbox[1],\n      maxX: bbox[2],\n      maxY: bbox[3]\n    });\n    var values = [];\n    potentialPoints.forEach(function (pt) {\n      if (booleanPointInPolygon([pt.minX, pt.minY], poly)) {\n        values.push(pt.property);\n      }\n    });\n    poly.properties[outProperty] = values;\n  });\n  return polygons;\n}\nvar turf_collect_default = collect;\nexport { collect, turf_collect_default as default };\n//# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}