{"ast":null,"code":"// index.ts\nimport { distance } from \"@turf/distance\";\nimport { intersect } from \"@turf/intersect\";\nimport { polygon, featureCollection } from \"@turf/helpers\";\nfunction triangleGrid(bbox, cellSide, options = {}) {\n  var results = [];\n  var xFraction = cellSide / distance([bbox[0], bbox[1]], [bbox[2], bbox[1]], options);\n  var cellWidth = xFraction * (bbox[2] - bbox[0]);\n  var yFraction = cellSide / distance([bbox[0], bbox[1]], [bbox[0], bbox[3]], options);\n  var cellHeight = yFraction * (bbox[3] - bbox[1]);\n  var xi = 0;\n  var currentX = bbox[0];\n  while (currentX <= bbox[2]) {\n    var yi = 0;\n    var currentY = bbox[1];\n    while (currentY <= bbox[3]) {\n      var cellTriangle1 = null;\n      var cellTriangle2 = null;\n      if (xi % 2 === 0 && yi % 2 === 0) {\n        cellTriangle1 = polygon([[[currentX, currentY], [currentX, currentY + cellHeight], [currentX + cellWidth, currentY], [currentX, currentY]]], options.properties);\n        cellTriangle2 = polygon([[[currentX, currentY + cellHeight], [currentX + cellWidth, currentY + cellHeight], [currentX + cellWidth, currentY], [currentX, currentY + cellHeight]]], options.properties);\n      } else if (xi % 2 === 0 && yi % 2 === 1) {\n        cellTriangle1 = polygon([[[currentX, currentY], [currentX + cellWidth, currentY + cellHeight], [currentX + cellWidth, currentY], [currentX, currentY]]], options.properties);\n        cellTriangle2 = polygon([[[currentX, currentY], [currentX, currentY + cellHeight], [currentX + cellWidth, currentY + cellHeight], [currentX, currentY]]], options.properties);\n      } else if (yi % 2 === 0 && xi % 2 === 1) {\n        cellTriangle1 = polygon([[[currentX, currentY], [currentX, currentY + cellHeight], [currentX + cellWidth, currentY + cellHeight], [currentX, currentY]]], options.properties);\n        cellTriangle2 = polygon([[[currentX, currentY], [currentX + cellWidth, currentY + cellHeight], [currentX + cellWidth, currentY], [currentX, currentY]]], options.properties);\n      } else if (yi % 2 === 1 && xi % 2 === 1) {\n        cellTriangle1 = polygon([[[currentX, currentY], [currentX, currentY + cellHeight], [currentX + cellWidth, currentY], [currentX, currentY]]], options.properties);\n        cellTriangle2 = polygon([[[currentX, currentY + cellHeight], [currentX + cellWidth, currentY + cellHeight], [currentX + cellWidth, currentY], [currentX, currentY + cellHeight]]], options.properties);\n      }\n      if (options.mask) {\n        if (intersect(featureCollection([options.mask, cellTriangle1]))) results.push(cellTriangle1);\n        if (intersect(featureCollection([options.mask, cellTriangle2]))) results.push(cellTriangle2);\n      } else {\n        results.push(cellTriangle1);\n        results.push(cellTriangle2);\n      }\n      currentY += cellHeight;\n      yi++;\n    }\n    xi++;\n    currentX += cellWidth;\n  }\n  return featureCollection(results);\n}\nvar turf_triangle_grid_default = triangleGrid;\nexport { turf_triangle_grid_default as default, triangleGrid };\n//# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}