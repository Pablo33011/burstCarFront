{"ast":null,"code":"// index.ts\nimport { circle } from \"@turf/circle\";\nimport { destination } from \"@turf/destination\";\nimport { lineString } from \"@turf/helpers\";\nfunction lineArc(center, radius, bearing1, bearing2, options = {}) {\n  const steps = options.steps || 64;\n  const angle1 = convertAngleTo360(bearing1);\n  const angle2 = convertAngleTo360(bearing2);\n  const properties = !Array.isArray(center) && center.type === \"Feature\" ? center.properties : {};\n  if (angle1 === angle2) {\n    return lineString(circle(center, radius, options).geometry.coordinates[0], properties);\n  }\n  const arcStartDegree = angle1;\n  const arcEndDegree = angle1 < angle2 ? angle2 : angle2 + 360;\n  let alpha = arcStartDegree;\n  const coordinates = [];\n  let i = 0;\n  const arcStep = (arcEndDegree - arcStartDegree) / steps;\n  while (alpha <= arcEndDegree) {\n    coordinates.push(destination(center, radius, alpha, options).geometry.coordinates);\n    i++;\n    alpha = arcStartDegree + i * arcStep;\n  }\n  return lineString(coordinates, properties);\n}\nfunction convertAngleTo360(alpha) {\n  let beta = alpha % 360;\n  if (beta < 0) {\n    beta += 360;\n  }\n  return beta;\n}\nvar turf_line_arc_default = lineArc;\nexport { turf_line_arc_default as default, lineArc };\n//# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}